#!/bin/bash
#================================================================================================ 
# 18.10.2012/S.Lehti
# 23.10.2012/LAW added support for use from outside lxplus
# 06.05.2016/Attikis added tracking of most branches and echo information
#================================================================================================ 

#================================================================================================ 
# Set variables
#================================================================================================ 
#REPOSITORY="https://github.com/$USER/HiggsAnalysis.git"
#REPOSITORY="http://cmsdoc.cern.ch/~$USER/HiggsAnalysis.git"
REPOSITORY="http://cmsdoc.cern.ch/~slehti/HiggsAnalysis.git"

DIRPREFIX=""
MYUSER=$USER
PUBLICREPO="public/html/HiggsAnalysis.git"
GITHUB="https://github.com"

if [ $1 ]; then
    BRANCH=$1
else
    BRANCH="master"
fi


printf "\n=== Cloning git repository $REPOSITORY\n"
echo "git clone ${REPOSITORY}"
git clone ${REPOSITORY}


printf "\n=== Changing directory to HiggsAnalysis/"
cd HiggsAnalysis
pwd


printf "\n=== Adding own repository alias as public"
aliasList=("alexandros" "cristina" "erik"     "joona"    "lauri"    "matti"    "ritva"    "sami"   "santeri" "stefan"    "tapio"  )
userList=( "attikis"    "cferro"   "epekkari" "jhavukai" "wendland" "mkortela" "kinnunen" "slehti" "slaurila" "strichte" "tlampen")

if [[ $HOST == lxplus* ]]; then
    printf "\n=== Adding public repo (lxplus)"
    echo "git remote add public $HOME/$PUBLICREPO"
    git remote add public $HOME/$PUBLICREPO

    printf "\n=== Adding git aliases for other users (lxplus)"
    for ((i=0; i<${#aliasList[@]}; ++i)); do
	MYALIAS=${aliasList[i]}
	MYUSER=${userList[i]}
	echo "git remote add $MYALIAS ${DIRPREFIX}~$MYUSER/$PUBLICREPO"
	git remote add $MYALIAS ${DIRPREFIX}~$MYUSER/$PUBLICREPO
    done
else
    printf "\n=== Adding public repo (jade)"
    echo "git remote add public ssh://${USER}@lxplus.cern.ch/afs/cern.ch/user/${USER:0:1}/$USER/$PUBLICREPO"
    git remote add public ssh://${USER}@lxplus.cern.ch/afs/cern.ch/user/${USER:0:1}/$USER/$PUBLICREPO

    printf "\n=== Adding git aliases for other users (jade)"
    for ((i=0; i<${#aliasList[@]}; ++i)); do
	MYALIAS=${aliasList[i]}
	MYUSER=${userList[i]}
	echo "git remote add $MYALIAS ssh://${USER}@lxplus.cern.ch:/afs/cern.ch/user/${MYUSER:0:1}/$MYUSER/$PUBLICREPO"
	git remote add $MYALIAS ssh://${USER}@lxplus.cern.ch:/afs/cern.ch/user/${MYUSER:0:1}/$MYUSER/$PUBLICREPO
    done
fi

printf "\n=== Adding git aliases for other users (GitHub)"
aliasList2=("attikis" "heitor" "laura")
userList2=( "attikis"  "heitorPB" "sorda")
for ((i=0; i<${#aliasList2[@]}; ++i)); do
    MYALIAS=${aliasList2[i]}
    MYUSER=${userList2[i]}
    echo "git remote add $MYALIAS $GITHUB/$MYUSER/HiggsAnalysis.git"
    git remote add $MYALIAS $GITHUB/$MYUSER/HiggsAnalysis.git
done


# Define list of branches to NOT be tracked
ignoreList=("master" "2011" "2011Inv_dev" "2012" "2012_LimitHp2cs 2012_TTEffDev" "44replicaOfHIG11019" "InvertedTau" "btagDB" "cmssw428_pattuplev18_Approved21022012" "pattuplev18_2" "pattuplev18_3"  "pattuplev44_5" "pattuplev44_5_taulegdev")

printf "\n=== Tracking most relevant remote branches"
# Loop over all remove branches
for branch in `git branch -r`; do

    skip=false
    BEFORESLASH=${branch%/*}
    AFTERSLASH=${branch#*/}

    # Check if branch is in ignore-list    
    for item in "${ignoreList[@]}"; do
	if [ "$item" == "$AFTERSLASH" ]; then
	    skip=true
	fi
    done
	    
    # If branch in ignore-list skip it
    if [ "$skip" == true ]; then
	printf "\n=== Skipping branch $branch\n"
	continue
    fi	

    printf "\n=== Tracking branch $branch\n"
    git branch --track $AFTERSLASH $branch;

done


#printf "\nSetting up tracking for special branches"
#if [ ${BRANCH} != "master" ]; then
#    git branch --track ${BRANCH} origin/${BRANCH}
#fi

# Is this obsolete?
if [ ${BRANCH} == "2011" ]; then
    git branch --track 2012 origin/2012
fi

printf "\n=== Checking out repository branch $BRANCH"
git checkout ${BRANCH}
git branch -a


printf "\n=== The following git aliases have been set up (check that the path for public is correct!):"
git remote -v


printf "\nLeaving HiggsAnalysis directory"
cd ..

printf "\The following git branches are available:"
git branch
printf "\n"
